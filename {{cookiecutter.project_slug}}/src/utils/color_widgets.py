# coding: utf-8
from __future__ import print_function

import os
from random import randint

from PySide2.QtGui import QColor, QPalette


def color_widget(func):
    """Color widget layout.

    Internal function that randomly colors a widget in order to check a layout.
    Function will get the value from the file `widgets_color_state` that can be
    generated by vscode task. Alternatively could be created inside `src/utils`
    with a value of `True` or `False`. If not found will do nothing.
    """
    def inner_wrapper(*args):

        self = args[0]
        func(self)

        ui_state_file = 'src/utils/widgets_color_state'
        if not os.path.exists(ui_state_file):
            return

        with open(ui_state_file) as state_file:
            state = state_file.read().strip()

        if state != 'True':
            return

        self.setAutoFillBackground(True)
        palette = QPalette()

        palette.setColor(
            QPalette.Window, QColor(
                randint(0, 255), randint(0, 255), randint(0, 255)
            )
        )

        self.setPalette(palette)
    return inner_wrapper
